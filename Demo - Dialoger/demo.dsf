/
Сначала описывается главный сценарий.

В данном случае он очень простой - создается главное меню.

Все дополнительные сценарии активизируются после выбора пользователем 
того или иного пункта меню.
/

scenario ГлавныйСценарий;
  execute СозданиеГлавногоМеню;
end;


subscenario СозданиеГлавногоМеню;
  send СоздатьГлавноеМеню;
end;


subscenario Демонстрация;
 Начало:
  /
  Далее описывается последовательность шагов демонстрации.
  /

  send ПоказатьГлавнуюЗаставку;

  send ПоказатьЗаставкуПередВводом;

  send ПоказатьЗаставкуПередВводомСтроки;
  send ПоказатьВводСтроки;

  send ПоказатьЗаставкуПередВводомЧисла;
  send ПоказатьВводЧисла;

  send ПоказатьЗаставкуПередВводомВарианта;
  send ПоказатьВводВарианта;

  send ПоказатьЗаставкуПередВводомЛогическогоЗначения;
  send ПоказатьВводЛогическогоЗначения;

  send ПоказатьЗаставкуПередВводомНесколькихЗначений;
  send ПоказатьВводНесколькихЗначений;

  send ПоказатьЗаставкуПередВводомНедостовернойИнформации;
  send ПоказатьВводНеточногоЧисла;
  send ПоказатьВводВариантаСУверенностью;
  send ПоказатьВводВариантаСДвумяУверенностями;

  send ПоказатьЗаставкуПередВыводом;
  send ПоказатьВыводИнформации;
  /
  Здесь пользователю задается вопрос, хочет ли он начать сначала.
  Причем по умолчанию предлагается ответ 'Нет'.
  Затем ответ пользователя анализируется и если он ответил 'Да',
  осуществляется переход на метку 'Начало'.
  /
  set #ЗапуститьРедактор# to 'Нет';
  send ПоказатьПоследнююЗаставку;
  when eqv(#ЗапуститьРедактор#, 'Нет') goto Конец;
  execute ЗапускРедактора;
 Конец:

end;


subscenario ЗапускРедактора;
  send '<message ProcName="Run"></message>' to DSDLEditor;
end;


subscenario Выход;
  stop;
end;


message СоздатьГлавноеМеню to Alternativer;
  line 'set Caption to $'Демонстрация$'';
  line 'set PictureFile to $'Demo.bmp$'';

  line 'on $'&Файл/&Выход$' execute Выход';
  line 'on $'&Демонстрация/&Поехали...$' execute Демонстрация';
  line 'on $'&Инструменты/&Редактор сценариев диалога...$' execute ЗапускРедактора';

  line 'activate';
end;


message ПоказатьГлавнуюЗаставку to Asker;
  line 'set Caption to $'Начало демонстрации$'';

  line concat('output ',
              text('Добро  пожаловать   на   демонстрацию  возможностей',
                   'инструментальных средств (ИС) для построения подсис-',
                   'тем общения прикладных интегрированных экспертных',
                   'систем (ИЭС).',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьЗаставкуПередВводом to Asker;
  line 'set Caption to $'Демонстрация возможностей ввода информации$'';

  line concat('output ',
              text('С помощью созданных ИС можно осуществлять ввод в систему различного  рода  информации. К настоящему моменту поддерживается ввод информации следующих типов:',
                   '  - строка,',
                   '  - число,',
                   '  - вариант ( элемент заданного множества ),',
                   '  - логический ( элемент множества {Да, Нет} ).',
                   '',
                   'Далее будет проиллюстрирован ввод информации перечисленных типов.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьЗаставкуПередВводомСтроки to Asker;
  line 'set Caption to $'Ввод значений строкового типа$'';

  line concat('output ',
              text('Далее будет показано, как осуществляется ввод инфор-',
                   'мации строкового типа.',
                   '',
                   'При вводе любой информации системой осуществляется ',
                   'проверка   на   корректность   ввода.   В   данном   случае',
                   'строка  может  содержать   любую   информацию   (в  том',
                   'числе, быть пустой).',
                   '',
                   'После того, как Вы нажмете кнопку ОК, Вам будет пред-',
                   'ложено окно ввода информации строкового типа. Чтобы',
                   'продолжить  демонстрацию,  введите  какое-либо  значе-',
                   'ние.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьВводСтроки to Asker;
  line 'set Caption to $'Пример ввода значения строкового типа$'';

  line 'output [$'Здесь может быть вопрос, ответом на который является$', $'введенное значение$'] as Question';

  line 'input $'Строка:$' to #ТестовыйОбъект.Строка# as String';

  line 'activate';
end;


message ПоказатьЗаставкуПередВводомЧисла to Asker;
  line 'set Caption to $'Ввод значений числового типа$'';

  line concat('output ',
              text('Далее будет показано, как осуществляется ввод инфор-',
                   'мации числового типа.',
                   '',
                   'При вводе информации данного типа система проверяет,',
                   'является ли введенное значение числом, и только в этом',
                   'случае позволяет осуществить ввод.',
                   '',
                   'После того, как Вы нажмете кнопку ОК, Вам будет пред-',
                   'ложено окно ввода информации числового типа. Чтобы',
                   'продолжить  демонстрацию,  введите  какое-либо  значе-',
                   'ние.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьВводЧисла to Asker;
  line 'set Caption to $'Пример ввода значения числового типа$'';

  line 'output [$'Здесь может быть вопрос, ответом на который является$', $'введенное значение$'] as Question';

  line 'input $'Число:$' to #ТестовыйОбъект.Число# as Number';

  line 'activate';
end;


message ПоказатьЗаставкуПередВводомВарианта to Asker;
  line 'set Caption to $'Ввод значений вариантного типа$'';

  line concat('output ',
              text('Далее будет показано, как осуществляется ввод инфор-',
                   'мации вариантного типа.',
                   '',
                   'После того, как Вы нажмете кнопку ОК, Вам будет пред-',
                   'ложено   окно   ввода   информации   вариантного   типа.',
                   'Чтобы продолжить демонстрацию,  введите  какое-либо',
                   'значение.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьВводВарианта to Asker;
  line 'set Caption to $'Пример ввода значения вариантного типа$'';

  line 'output [$'Здесь может быть вопрос, ответом на который является$', $'введенное значение$'] as Question';

  line 'input $'Вариант:$' to #ТестовыйОбъект.Вариант# as Variant from [$'Вариант 1$', $'Вариант 2$', $'Вариант 3$', $'Вариант 4$', $'Вариант 5$']';

  line 'activate';
end;


message ПоказатьЗаставкуПередВводомЛогическогоЗначения to Asker;
  line 'set Caption to $'Ввод значений логического типа$'';

  line concat('output ',
              text('Далее будет показано, как осуществляется ввод инфор-',
                   'мации логического типа.',
                   '',
                   'После того, как Вы нажмете кнопку ОК, Вам будет пред-',
                   'ложено окно ввода информации логического типа. Чтобы',
                   'продолжить  демонстрацию,  введите  какое-либо  значе-',
                   'ние.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьВводЛогическогоЗначения to Asker;
  line 'set Caption to $'Пример ввода значения логического типа$'';

  line 'output [$'Здесь может быть вопрос, ответом на который является$', $'введенное значение$'] as Question';

  line 'input $'Значение логического типа$' to #ТестовыйОбъект.ЛогическоеЗначение# as Checked from $'Да$' or $'Нет$'';

  line 'activate';
end;


message ПоказатьЗаставкуПередВводомНесколькихЗначений to Asker;
  line 'set Caption to $'Ввод нескольких значений$'';

  line concat('output ',
              text('Созданные ИС позволяют осуществлять ввод несколь-',
                   'ких значений (возможно разных типов) на одной форме.',
                   '',
                   'Далее приводится пример организации такого ввода.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьВводНесколькихЗначений to Asker;
  line 'set Caption to $'Пример ввода нескольких значений$'';

  line 'output [$'Здесь может быть вопрос, ответом на который являются$', $'введенные значения$'] as Question';

  line 'input $'Строка:$' to #ТестовыйОбъект.Строка# as String';

  line 'input $'Число: $' to #ТестовыйОбъект.Число# as Number';

  line 'input $'Вариант:$' to #ТестовыйОбъект.Вариант# as Variant from [$'Вариант 1$', $'Вариант 2$', $'Вариант 3$', $'Вариант 4$', $'Вариант 5$']';

  line 'input $'Значение логического типа$' to #ТестовыйОбъект.ЛогическоеЗначение# as Checked from $'Да$' or $'Нет$'';

  line 'activate';
end;


message ПоказатьЗаставкуПередВводомНедостовернойИнформации to Asker;
  line 'set Caption to $'Ввод нескольких значений$'';

  line concat('output ',
              text('В ряде случаев информация, поступающая от пользова-',
                   'теля может  быть  недостоверной.  Это связано,  напри-',
                   'мер,   с   погрешностями   измерений,   неуверенностью',
                   'пользователя в том или ином ответе и т.д.',
                   '',
                   'Созданные  ИС  позволяют  осуществлять  ввод  инфор-',
                   'мации такого рода.  Далее  будет  приведено несколько',
                   'примеров   организации   ввода  недостоверной   инфор-',
                   'мации.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьВводНеточногоЧисла to Asker;
  line 'set Caption to $'Пример ввода значения числового типа с погрешностью$'';

  line 'output [$'Здесь может быть вопрос, ответом на который является$', $'введенное значение$'] as Question';

  line 'input $'Число:$' to #ТестовыйОбъект.ЧислоСПогрешностью# as InexactNumber';

  line 'activate';
end;


message ПоказатьВводВариантаСУверенностью to Asker;
  line 'set Caption to $'Пример ввода значения вариантного типа с уверенностью$'';

  line 'output [$'Здесь может быть вопрос, ответом на который является$', $'введенное значение$'] as Question';

  line 'input $'Вариант:$' to #ТестовыйОбъект.ВариантСУверенностью# as IndefVariant from [$'Вариант 1$', $'Вариант 2$', $'Вариант 3$', $'Вариант 4$', $'Вариант 5$']';

  line 'activate';
end;


message ПоказатьВводВариантаСДвумяУверенностями to Asker;
  line 'set Caption to $'Пример ввода значения вариантного типа с min и max уверенностями$'';

  line 'output [$'Здесь может быть вопрос, ответом на который является$', $'введенное значение$'] as Question';

  line 'input $'Вариант:$' to #ТестовыйОбъект.ВариантСДвумяУверенностями# as SubdefVariant from [$'Вариант 1$', $'Вариант 2$', $'Вариант 3$', $'Вариант 4$', $'Вариант 5$']';

  line 'activate';
end;


message ПоказатьЗаставкуПередВыводом to Asker;
  line 'set Caption to $'Демонстрация возможностей вывода информации$'';

  line concat('output ',
              text('С помощью созданных ИС можно осуществлять вывод на',
                   'экран той или иной информации. Далее будут показаны',
                   'различные варианты вывода информации.',
                   '',
                   'Для продолжения нажмите ОК'),
              'as Attention');

  line 'activate';
end;


message ПоказатьВыводИнформации to Informer;
  line 'set Caption to $'Примеры вывода информации на экран$'';

  line 'output $'Данный текст выводится как информационное сообщение.$' as Information';

  line 'output $'Данный текст выводится как вопрос к пользователю.$' as Question';

  line 'output $'Данный текст выводится как предупреждение.$' as Attention';

  line 'output $'Данный текст выводится выровненным по левому краю.$' as String on Left';

  line 'output $'Данный текст выводится выровненным по правому краю.$' as String on Right';

  line 'output $'Данный текст выводится выровненным по центру.$' as String on Center';

  line 'activate';
end;


message ПоказатьПоследнююЗаставку to Asker;
  line 'set Caption to $'Конец$'';

  line concat('output ',
              text('К сожалению,  демонстрация возможностей  ИС для  по-',
                   'строения подсистем общения прикладных ИЭС подошла',
                   'к концу.',
                   '',
                   'Автор желает Вам хорошего настроения и надеется, что',
                   'представленная демонстрация Вам понравилась',
                   ''),
              'as Attention');

  line 'input $'Запустить редактор сценариев диалога после завершения$' to #ЗапуститьРедактор# as Checked from $'Да$' or $'Нет$'';

  line 'activate';
end;


message TestInput to Asker;
  line 'set Caption to $'Проверка ввода значений разного типа$'';

  line 'input $'String:$' to #TestObject.String# as String';

  line 'input $'Number:$' to #TestObject.Number# as Number';

  line 'input $'InexactNumber:$' to #TestObject.InexactNumber# as InexactNumber';

  line 'input $'Variant:$' to #TestObject.Variant# as Variant from [$'вариант 1$', $'вариант 2$', $'вариант 3$', $'вариант 4$']';

  line 'input $'IndefVariant:$' to #TestObject.IndefVariant# as IndefVariant from [$'вариант 1$', $'вариант 2$', $'вариант 3$', $'вариант 4$']';

  line 'input $'SubdefVariant:$' to #TestObject.SubdefVariant# as SubdefVariant from [$'вариант 1$', $'вариант 2$', $'вариант 3$', $'вариант 4$']';

  line 'input $'Checked$' to #TestObject.Checked# as Checked from $'да$' or $'нет$'';

  line 'activate';
end;